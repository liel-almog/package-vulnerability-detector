import { createZodDto } from 'nestjs-zod';
import { z } from 'zod';
import { ECOSYSTEMS } from '../../models/ecosystem.model.js';

const Base64Schema = z.string().transform((base64String) => {
  return Buffer.from(base64String, 'base64').toString('utf-8');
});

export const PackageJsonSchema = z.object({
  dependencies: z.record(z.string()).optional(),
});

export const StringToPackageJsonSchema = z
  .string()
  .transform((packageJsonString) => {
    try {
      return JSON.parse(packageJsonString);
    } catch (error) {
      throw new Error('INVALID_PACKAGE_MANAGER');
    }
  })

  .pipe(PackageJsonSchema);

export const ScanDependenciesSchema = z.object({
  ecosystem: z.enum(ECOSYSTEMS),
  fileContent: Base64Schema,
});

export class ScanDependencies extends createZodDto(ScanDependenciesSchema) {}
